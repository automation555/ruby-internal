#ifndef insns_info__h_
#define insns_info__h_

#include "vm.h"

#ruby <<END
  require 'ruby_source_dir'
  insns_location = "#{RUBY_SOURCE_DIR}/insns.inc"
  insns_info_location = "#{RUBY_SOURCE_DIR}/insns_info.inc"

  INSTRUCTION_NAMES = []
  record_instruction_names = false

  [ insns_location, insns_info_location ].each do |file|
    next if not File.exist?(file)

    File.open(file) do |input|
      while (line = input.gets) != nil do
        line.chomp!
        if line =~ /^}/ then
          record_instruction_names = false
        end
        if record_instruction_names then
          INSTRUCTION_NAMES.push(line.chomp(',').gsub(/"/, '').lstrip.upcase)
        end
        puts line
        if line =~ /static.*insn_name_info.*=/ then
          record_instruction_names = true
        end
      end
    end
  end
  nil
END

static VALUE instruction_class[YARV_MAX_INSTRUCTION_SIZE];

void define_instruction_subclasses(VALUE rb_cInstruction)
{
  /* For rdoc: rb_cVM = rb_define_class("VM", rb_cObject); */
  /* For rdoc: rb_cInstruction = rb_define_class_under(rb_cVM, "Instruction", rb_cObject); */

#ruby <<END
  INSTRUCTION_NAMES.each_with_index do |name, index|
    puts <<-END
  {
    instruction_class[#{index}] = rb_define_class_under(rb_cInstruction, "#{name}", rb_cInstruction);
  }
    END
  end
  nil
END
}

#endif

